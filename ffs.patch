diff --git a/include/menuitems_object.h b/include/menuitems_object.h
index d8f4abe..edaf080 100644
--- a/include/menuitems_object.h
+++ b/include/menuitems_object.h
@@ -222,7 +222,7 @@ class ObjectActionItem : public MenuItem {
     virtual int display(Coord pos, bool selected, bool opened) override {
         //Serial.printf("button_label_true is %s\n", this->button_label_true);
         //char *button_label = this->target_object->*get_label( this->target_object->*getter() );
-        char *button_label = nullptr;
+        /*char *button_label = nullptr;
         if (this->getter!=nullptr && this->button_label_true!=nullptr)
             button_label = (this->target_object->*getter)() ? this->button_label_true : this->button_label_false;
         else
@@ -234,6 +234,28 @@ class ObjectActionItem : public MenuItem {
 
         //colours(opened, opened ? GREEN : C_WHITE, BLACK);
 
+        return tft->getCursorY();*/
+        tft->setCursor(pos.x, pos.y);
+        return this->renderValue(selected, opened, MENU_C_MAX/2);
+    }
+
+    virtual int renderValue(bool selected, bool opened, uint16_t max_character_width) override {
+        //const char *txt = (this->target_object->*getter)() ? "On" : "Off";
+        char *button_label = nullptr;
+        if (this->getter!=nullptr && this->button_label_true!=nullptr)
+            button_label = (this->target_object->*getter)() ? this->button_label_true : this->button_label_false;
+        else
+            button_label = this->button_label_false;
+        bool use_small = strlen(button_label) <= (max_character_width/2);
+
+        byte textSize = use_small ? 2 : 1;
+        if (this->debug) 
+            Serial.printf("%s:\trenderValue '%s' (len %i) with max_character_width %i got textSize %i\n", this->label, button_label, strlen(button_label), max_character_width/2, textSize);
+
+        tft->setTextSize(textSize);
+
+        tft->println(button_label);
+
         return tft->getCursorY();
     }
 
@@ -259,7 +281,7 @@ class ObjectActionItem : public MenuItem {
 
 
 template<class TargetClass>
-class ObjectActionConfirmItem : public ObjectActionItem<TargetClass> /*, virtual public ActionConfirmItem */ {
+class ObjectActionConfirmItem : public ObjectActionItem<TargetClass> {
     public:
 
     using setter_def = void(TargetClass::*)();
@@ -274,16 +296,21 @@ class ObjectActionConfirmItem : public ObjectActionItem<TargetClass> /*, virtual
     };
 
     virtual int display(Coord pos, bool selected, bool opened) override {
+        this->tft->setCursor(pos.x, pos.y);
+        return this->renderValue(selected, opened, MENU_C_MAX/2);
+    }
+
+    virtual int renderValue(bool selected, bool opened, int character_width_max) {
+        int y = 0;
         if (opened)
-            pos.y = this->header("??? Sure ???", pos, selected, opened);
+            y = this->header("??? Sure ???", Coord(0,this->tft->getCursorY()), selected, opened);
         else
-            pos.y = this->header(this->label, pos, selected, opened);
-        this->tft->setCursor(pos.x,pos.y);
-        this->tft->setTextSize(1);
-
-        this->colours(opened, opened ? GREEN : C_WHITE, BLACK);
+            y = this->header(this->label, Coord(0,this->tft->getCursorY()), selected, opened);
+        //this->tft->setCursor(pos.x,pos.y);
+        //this->tft->setTextSize(1);
+        //this->colours(opened, opened ? GREEN : C_WHITE, BLACK);
 
-        return this->tft->getCursorY() + this->tft->getRowHeight();
+        return y; //this->tft->getCursorY(); // + this->tft->getRowHeight();
     }
 
     virtual bool action_opened() override {
